Notes

Setup


Tests that need to be written

contraction_utils.cpp
	243
		in method ContractionData::ContractGrid
		if the contraction didn't end up with 1 tensor, fail and print tensor
		Testing
			Handled by SimpleInitializeData??
			CHECK THIS ASSERT
	376
		in method index_name(vector1, vector2)
		'Failed to construct tensor name'
		print vectors
		Testing
			Handled by IndexNamingFailures test
	387
		in method index_name(vector, tensors)
		'Failed to construct tensor name'
		print vector and tensors
		Testing
			Handled by IndexNamingFailures test
	497
		in external method ContractGrid
		'Amplitude return vectors must be non-null'
		just print message
		Testing
			Handled by ContractionUtilsTest, ContractGrid test
	498
		in external method ContractGrid
		checks IsOrderingValid()
		Testing
			Handled by ContactrionUtilsTest, ContractGrid test

read_circuit.cpp
	234, 252, 295
		in order_func, a helper function for grid_of_tensors 3d_to_2d
		occurs when there is a pair not found
		snprintf(error)
		There are no tests for order_func!!
	321
		in circuit_data_to_grid_of_tensors()
		checks that num_qubits == I * J
		Testing
			This is weird because we already set num_bits = I * J
			Open issue
	326
		in circuit_data_to_grid_of_tensors()
		checks length of initial_conf
		Not tested
	328
		in circuit_data_to_grid_of_tensors()
		checks length of final_conf_B
		Not tested
	638
		in read_wave_function_evolution()
		checks that file can be read 
		Not tested
	651
		in read_wave_function_evolution()
		Checks that I matches the number of num_qubits
		Not tested
		pass in ifstream

mkl_tensor.cpp
	73
		in _init
		"indices and dimensions should have equal size"
		TESTED
	114
		in MKLTensor
		"the vector data has to match the size of the MKLTensor"
		TESTED
	156
		in MKLTensor
		checks that there is space for the requested tensor dimensions
	194
		in project
		checks that index is indices[0]
	195
		in project
		checks that index_value is in range 
	217
		in rename_index
		checks that old_nbame is a valid index
	218
		in rename_index
		checks that new_name is not an existing index
	228
		in bundle
		checks that indices_to_bundle is contained in indices
	234
		in bundle
		checks that indices_to_bundle is in the order they appear in indices
	665
		in reorder
		checks that new_ordering is a reordering of current indices
	759
		in multiply
		checks that A and C are not the same tensor
	760
		in multiply
		checks that B and C are not the same tensor
	782
		in multiply
		checks that common indices have matching dimensions
	792
		in multiply
		checks that C has enough space for the A*B
	860
		in _generate_binary_reordering_map
		checks that the size of the map is 2^num_indices



